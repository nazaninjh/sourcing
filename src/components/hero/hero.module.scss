@use "./../../app//styles/placeholders";
@use "./../../app/styles/mixins" as mixin;

.wrapper {
  .desktop {
    display: none;
  }
  @include mixin.mq(sm) {
    .mobile {
      display: none;
    }
    .desktop {
      display: inline;
    }
  }
  :global {
    .ant-carousel {
      .slick-prev,
      .slick-next {
        color: var(--text-light);
        opacity: 1;
        inline-size: 1rem !important;
        block-size: 1rem !important;
        &::after {
          inline-size: 1rem !important;
          block-size: 1rem !important;
        }
      }
      .slick-prev {
        inset-inline-start: 2rem !important;
      }
      .slick-next {
        inset-inline-end: 2rem !important;
      }
    }
  }

  .img-container {
    direction: rtl;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "stack";
    position: relative; // for z-index stacking context
    width: 100%;
  }

  .img {
    height: auto;
    max-height: 100vh;
    max-height: 100dvh;
    width: 100%;
    object-fit: cover;
    border-radius: 0;
    @include mixin.mq(sm) {
      grid-area: stack;
      display: inline;
      width: 100%;
      height: 100%;

      z-index: 1;
    }
  }
  .nav {
    grid-area: stack;
    z-index: 3;
  }

  .texts {
    display: none;
    @extend %center-in-wrapper;
    @include mixin.mq(sm) {
      grid-area: stack;
      align-self: center;
      justify-self: start;
      display: grid;

      row-gap: 1rem;
      color: var(--text-light);

      width: fit-content;
      z-index: 3;

      > * {
        margin: 0;
      }

      > h5 {
        max-width: 80ch;
        font-weight: 400;
      }
      .btns {
        justify-self: end;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: var(--fz-sm);
        > button {
          @include mixin.GlobalBtn(
            $bg: transparent,
            $color: var(--text-light),
            $border: var(--text-light) solid 1px
          );
        }
        > button:last-child {
          @include mixin.GlobalBtn($border: var(--color-primary) solid 1px);
        }
      }
    }
  }
  .mobile-texts {
    grid-area: stack;
    align-self: end;

    display: grid;
    row-gap: 0.5rem;
    color: var(--text-light);

    text-align: center;

    z-index: 3;

    margin-block-end: 1rem;

    > * {
      margin: 0;
    }

    > h1 {
      font-size: var(--fz-lg);
    }

    > h4 {
      font-size: var(--fz-md);
    }

    @include mixin.mq(sm) {
      display: none;
    }
  }
}
