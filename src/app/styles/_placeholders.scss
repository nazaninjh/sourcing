@use "./variables" as vars;
@use "./mixins" as mixin;
@use "sass:color";
%ham-sidebar {
  position: absolute;
  inset-block: 0;
  inset-inline: 0;

  max-width: 250px;
  min-height: 100vh;
  background-color: green;

  z-index: -1;
  transition:
    transform 1000ms ease-in,
    opacity 500ms linear;
  &.show {
    opacity: 1;
    transform: translateX(0%);
    z-index: 999;
  }
  &.close {
    opacity: 0;
    transform: translateX(100%);
    z-index: -1;
  }
}

%backdrop {
  position: fixed;
  inset: 0;
  background-color: rgba(17, 17, 17, 0.2);
  z-index: -1;
  opacity: 0;

  &.show {
    opacity: 1;
    z-index: 998;
    pointer-events: auto;
  }
  &.close {
    opacity: 0;
    z-index: -1;
  }
}

%overlay {
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.2);
}

%divider {
  width: 100%;
  height: 2px;
  background-color: color.adjust(vars.$border-gray, $lightness: +20%);
}

%center-in-wrapper {
  margin-inline: 1rem;
  @include mixin.mq(sm) {
    margin-inline: 2rem;
  }
  @include mixin.mq(2xl) {
    width: auto;
    margin-inline-start: calc((100% - 1440px) / 2);
    padding-inline: 0px;
    padding-block: 0px;
  }
}

%wrapper {
  max-width: 100%;
  padding-inline: 1rem;
  padding-block: 0px;
}

@media (min-width: 40rem) and (max-width: 90rem) {
  %wrapper {
    max-width: vars.$max-page-width;
    margin: 0 auto;
    padding-inline: 2rem;
    padding-block: 0px;
  }
}

@media (min-width: 90rem) {
  %wrapper {
    max-width: vars.$max-page-width;
    margin: 0 auto;
    padding-inline: 0px;
    padding-block: 0px;
  }
}

%grid-stack {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: "stack";
  position: relative; // for z-index stacking context
}
